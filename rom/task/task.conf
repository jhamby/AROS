##begin config
version 1.3
libbase TaskResBase
libbasetype struct TaskResBase
residentpri 100
options noautoinit, noautolib
##end config
##begin cdef

#include <utility/tagitem.h>

##end cdef
##begin cdefprivate
#include "task_intern.h"
##end cdefprivate

##begin functionlist
struct TaskList *LockTaskList(ULONG flags) (D0)
VOID UnLockTaskList(struct TaskList *tlist, ULONG flags) (A0, D0)
struct Task *NextTaskEntry(struct TaskList *tlist, ULONG flags) (A0, D0)
.skip 2
VOID QueryTaskTagList(struct Task *task, struct TagItem * tagList) (A0, A1)
.skip 2
BOOL InitTaskHooks(APTR thDispatcher, ULONG thType, ULONG thFlags) (A0, D0, D1)
BOOL AddTaskHook(struct Hook *tHook, ULONG thType) (A0, D0)
BOOL RunTaskHooks(APTR thDispatcher, ULONG thType) (A0, D0)
LONG AllocTaskStorageSlot() ()
VOID FreeTaskStorageSlot(LONG slot) (D0)
APTR SaveTaskStorage() ()
void RestoreTaskStorage(APTR id) (A0)
BOOL SetTaskStorageSlot(LONG id, IPTR value) (D0, D1)
IPTR GetTaskStorageSlot(LONG id) (D0)
IPTR GetParentTaskStorageSlot(LONG id) (D0)
##end functionlist
